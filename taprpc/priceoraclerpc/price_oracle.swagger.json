{
  "swagger": "2.0",
  "info": {
    "title": "priceoraclerpc/price_oracle.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PriceOracle"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/taproot-assets/rfq/priceoracle/assetrates": {
      "get": {
        "summary": "QueryAssetRates retrieves the exchange rate between a tap asset and BTC for\na specified transaction type, subject asset, and payment asset. The asset\nrate represents the number of tap asset units per BTC.",
        "operationId": "PriceOracle_QueryAssetRates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/priceoraclerpcQueryAssetRatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transaction_type",
            "description": "transaction_type indicates whether the transaction is a purchase or a\nsale.\n\n - PURCHASE: PURCHASE indicates a purchase transaction.\n - SALE: SALE indicates a sale transaction.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PURCHASE",
              "SALE"
            ],
            "default": "PURCHASE"
          },
          {
            "name": "subject_asset.asset_id",
            "description": "The 32-byte asset ID specified as raw bytes (gRPC only).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "subject_asset.asset_id_str",
            "description": "The 32-byte asset ID encoded as a hex string (use this for REST).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_asset.group_key",
            "description": "The 32-byte asset group key specified as raw bytes (gRPC only).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "subject_asset.group_key_str",
            "description": "The 32-byte asset group key encoded as hex string (use this for\nREST).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_asset_max_amount",
            "description": "subject_asset_max_amount is the maximum amount of the subject asset that\ncould be involved in the transaction.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "payment_asset.asset_id",
            "description": "The 32-byte asset ID specified as raw bytes (gRPC only).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "payment_asset.asset_id_str",
            "description": "The 32-byte asset ID encoded as a hex string (use this for REST).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_asset.group_key",
            "description": "The 32-byte asset group key specified as raw bytes (gRPC only).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "payment_asset.group_key_str",
            "description": "The 32-byte asset group key encoded as hex string (use this for\nREST).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_rates_hint.subjectAssetRate.coefficient",
            "description": "The coefficient is the fractional value scaled-up as an integer. This\ninteger is represented as a string as it may be too large to fit in a\nuint64.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_rates_hint.subjectAssetRate.scale",
            "description": "The scale is the component that determines how many decimal places\nthe coefficient should be divided by to obtain the fractional value.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "asset_rates_hint.paymentAssetRate.coefficient",
            "description": "The coefficient is the fractional value scaled-up as an integer. This\ninteger is represented as a string as it may be too large to fit in a\nuint64.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_rates_hint.paymentAssetRate.scale",
            "description": "The scale is the component that determines how many decimal places\nthe coefficient should be divided by to obtain the fractional value.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "asset_rates_hint.expiry_timestamp",
            "description": "expiry_timestamp is the Unix timestamp in seconds after which the asset\nrates are no longer valid.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction_counterparty",
            "description": "The counterparty is the transaction's counterparty. The price oracle\nmay use this information to adjust asset rates based on the\nstructure of the Lightning Network topology.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "PriceOracle"
        ]
      }
    }
  },
  "definitions": {
    "priceoraclerpcAssetRates": {
      "type": "object",
      "properties": {
        "subjectAssetRate": {
          "$ref": "#/definitions/priceoraclerpcFixedPoint",
          "description": "subjectAssetRate is the number of subject asset units per BTC represented\nas a fixed-point number. This field is also commonly referred to as the\nsubject asset to BTC (conversion) rate. When the subject asset is BTC,\nthis field should be set to 100 billion, as one BTC is equivalent to 100\nbillion msats."
        },
        "paymentAssetRate": {
          "$ref": "#/definitions/priceoraclerpcFixedPoint",
          "description": "paymentAssetRate is the number of payment asset units per BTC represented\nas a fixed-point number. This field is also commonly referred to as the\npayment asset to BTC (conversion) rate. When the payment asset is BTC,\nthis field should be set to 100 billion, as one BTC is equivalent to 100\nbillion msats."
        },
        "expiry_timestamp": {
          "type": "string",
          "format": "uint64",
          "description": "expiry_timestamp is the Unix timestamp in seconds after which the asset\nrates are no longer valid."
        }
      },
      "description": "AssetRates represents the exchange rates for subject and payment assets\nrelative to BTC, expressed as fixed-point numbers. It includes the rates\nfor both assets and an expiration timestamp indicating when the rates\nare no longer valid."
    },
    "priceoraclerpcAssetSpecifier": {
      "type": "object",
      "properties": {
        "asset_id": {
          "type": "string",
          "format": "byte",
          "description": "The 32-byte asset ID specified as raw bytes (gRPC only)."
        },
        "asset_id_str": {
          "type": "string",
          "description": "The 32-byte asset ID encoded as a hex string (use this for REST)."
        },
        "group_key": {
          "type": "string",
          "format": "byte",
          "description": "The 32-byte asset group key specified as raw bytes (gRPC only)."
        },
        "group_key_str": {
          "type": "string",
          "description": "The 32-byte asset group key encoded as hex string (use this for\nREST)."
        }
      },
      "description": "AssetSpecifier is a union type for specifying an asset by either its asset ID\nor group key."
    },
    "priceoraclerpcFixedPoint": {
      "type": "object",
      "properties": {
        "coefficient": {
          "type": "string",
          "description": "The coefficient is the fractional value scaled-up as an integer. This\ninteger is represented as a string as it may be too large to fit in a\nuint64."
        },
        "scale": {
          "type": "integer",
          "format": "int64",
          "description": "The scale is the component that determines how many decimal places\nthe coefficient should be divided by to obtain the fractional value."
        }
      },
      "description": "FixedPoint is a scaled integer representation of a fractional number.\n\nThis type consists of two integer fields: a coefficient and a scale.\nUsing this format enables precise and consistent representation of fractional\nnumbers while avoiding floating-point data types, which are prone to\nprecision errors.\n\nThe relationship between the fractional representation and its fixed-point\nrepresentation is expressed as:\n```\nV = F_c / (10^F_s)\n```\nwhere:\n\n* `V` is the fractional value.\n\n* `F_c` is the coefficient component of the fixed-point representation. It is\n   the scaled-up fractional value represented as an integer.\n\n* `F_s` is the scale component. It is an integer specifying how\n  many decimal places `F_c` should be divided by to obtain the fractional\n  representation."
    },
    "priceoraclerpcQueryAssetRatesErrResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "error is the error message."
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "code is the error code."
        }
      },
      "description": "QueryAssetRatesErrResponse is the error response to a QueryAssetRates call."
    },
    "priceoraclerpcQueryAssetRatesOkResponse": {
      "type": "object",
      "properties": {
        "asset_rates": {
          "$ref": "#/definitions/priceoraclerpcAssetRates",
          "description": "asset_rates is the asset exchange rates for the transaction."
        }
      },
      "description": "QueryAssetRatesOkResponse is the successful response to a\nQueryAssetRates call."
    },
    "priceoraclerpcQueryAssetRatesResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "$ref": "#/definitions/priceoraclerpcQueryAssetRatesOkResponse",
          "description": "ok is the successful response to the query."
        },
        "error": {
          "$ref": "#/definitions/priceoraclerpcQueryAssetRatesErrResponse",
          "description": "error is the error response to the query."
        }
      },
      "description": "QueryAssetRatesResponse is the response from a QueryAssetRates RPC call."
    },
    "priceoraclerpcTransactionType": {
      "type": "string",
      "enum": [
        "PURCHASE",
        "SALE"
      ],
      "default": "PURCHASE",
      "description": "TransactionType is an enum representing the type of transaction.\n\n - PURCHASE: PURCHASE indicates a purchase transaction.\n - SALE: SALE indicates a sale transaction."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
